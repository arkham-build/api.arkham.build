/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface ArkhamdbDecklist {
  canonical_investigator_code: string;
  date_creation: Timestamp;
  date_update: Timestamp | null;
  description_md: string | null;
  exile_string: string | null;
  id: number;
  ignore_deck_limit_slots: Record<string, number> | null;
  investigator_code: string;
  investigator_name: string;
  like_count: Generated<number>;
  meta: Json | null;
  name: string;
  next_deck: number | null;
  previous_deck: number | null;
  side_slots: Record<string, number> | null;
  slots: Record<string, number>;
  taboo_id: number | null;
  tags: string | null;
  user_id: number;
  version: string | null;
  xp: number | null;
  xp_adjustment: number | null;
  xp_spent: number | null;
}

export interface ArkhamdbDecklistDuplicate {
  duplicate_of: number;
  id: number;
}

export interface ArkhamdbUser {
  id: number;
  name: string;
  reputation: Generated<number>;
}

export interface Card {
  alt_art_investigator: Generated<boolean | null>;
  alternate_of_code: string | null;
  back_illustrator: string | null;
  back_link_id: string | null;
  clues: number | null;
  clues_fixed: Generated<boolean | null>;
  code: string;
  cost: number | null;
  customization_options: Json | null;
  deck_limit: number | null;
  deck_options: Json | null;
  deck_requirements: Json | null;
  doom: number | null;
  double_sided: Generated<boolean | null>;
  duplicate_of_code: string | null;
  encounter_code: string | null;
  encounter_position: number | null;
  enemy_damage: number | null;
  enemy_evade: number | null;
  enemy_fight: number | null;
  enemy_horror: number | null;
  errata_date: Timestamp | null;
  exceptional: Generated<boolean | null>;
  exile: Generated<boolean | null>;
  faction_code: string;
  faction2_code: string | null;
  faction3_code: string | null;
  heals_damage: Generated<boolean | null>;
  heals_horror: Generated<boolean | null>;
  health: number | null;
  health_per_investigator: Generated<boolean | null>;
  hidden: Generated<boolean | null>;
  id: string;
  illustrator: string | null;
  is_unique: Generated<boolean | null>;
  linked: Generated<boolean | null>;
  myriad: Generated<boolean | null>;
  official: Generated<boolean>;
  pack_code: string;
  pack_position: number | null;
  permanent: Generated<boolean | null>;
  position: number;
  preview: Generated<boolean | null>;
  quantity: number;
  real_back_flavor: string | null;
  real_back_name: string | null;
  real_back_text: string | null;
  real_back_traits: string | null;
  real_customization_change: string | null;
  real_customization_text: string | null;
  real_flavor: string | null;
  real_name: string;
  real_slot: string | null;
  real_subname: string | null;
  real_taboo_text_change: string | null;
  real_text: string | null;
  real_traits: string | null;
  restrictions: Json | null;
  sanity: number | null;
  shroud: number | null;
  side_deck_options: Json | null;
  side_deck_requirements: Json | null;
  skill_agility: number | null;
  skill_combat: number | null;
  skill_intellect: number | null;
  skill_wild: number | null;
  skill_willpower: number | null;
  stage: number | null;
  subtype_code: string | null;
  taboo_set_id: number | null;
  taboo_xp: number | null;
  tags: string[] | null;
  translations: { locale: string; [key: string]: string }[];
  type_code: string;
  vengeance: number | null;
  victory: number | null;
  xp: number | null;
}

export interface Cycle {
  code: string;
  position: number;
  real_name: string;
  translations: { locale: string; name: string; }[];
}

export interface DataVersion {
  card_count: number;
  cards_updated_at: Timestamp;
  locale: string;
  translation_updated_at: Timestamp;
}

export interface EncounterSet {
  code: string;
  pack_code: string;
  real_name: string;
  translations: { locale: string; name: string; }[];
}

export interface Faction {
  code: string;
  is_primary: boolean;
  name: string;
}

export interface Pack {
  code: string;
  cycle_code: string;
  position: number;
  real_name: string;
  translations: { locale: string; name: string; }[];
}

export interface SchemaMigrations {
  version: string;
}

export interface Subtype {
  code: string;
  name: string;
}

export interface TabooSet {
  card_count: number;
  date: Timestamp;
  id: number;
  name: string | null;
}

export interface Type {
  code: string;
  name: string;
}

export interface DB {
  arkhamdb_decklist: ArkhamdbDecklist;
  arkhamdb_decklist_duplicate: ArkhamdbDecklistDuplicate;
  arkhamdb_user: ArkhamdbUser;
  card: Card;
  cycle: Cycle;
  data_version: DataVersion;
  encounter_set: EncounterSet;
  faction: Faction;
  pack: Pack;
  schema_migrations: SchemaMigrations;
  subtype: Subtype;
  taboo_set: TabooSet;
  type: Type;
}
